@import "functions";
@import "filters";

/* animations and transitions */
@mixin transform($args) {
    @include prefix(transform, $args);
}

@mixin keyframes($animation) {
    @-webkit-keyframes $animation { @content; }

    @-moz-keyframes $animation { @content; }

    @-ms-keyframes $animation { @content; }

    @keyframes $animation { @content; }
}

@include keyframes(spin) {
    to  { @include transform(rotate(360deg)); }
}

@mixin spin($args: 1s ease infinite) {
    @include prefix(animation, spin $args);
}

@include keyframes(slidedown) {
    0% {
        @include opacity(0);
        @include transform(translate3d(0, -10%, 0));
    }

    100% {
        @include opacity(1);
        @include transform(translate3d(0, 0, 0));
    }
}

@mixin slidedown($args: .3s) {
    @include prefix(animation, slidedown $args);
}

@include keyframes(slideup) {
    0% {
        @include opacity(0);
        @include transform(translate3d(0, 10%, 0));
    }

    100% {
        @include opacity(1);
        @include transform(translate3d(0, 0, 0));
    }
}

@mixin slideup($args: .3s) {
    @include prefix(animation, slideup $args);
}

@include keyframes(appear) {
    0% {
        @include opacity(0);
        @include transform(scale(.5));
    }

    30%  { @include transform(scale(1)); }

    100%  { @include opacity(1); }
}

@mixin appear($args: .5s) {
    @include prefix(animation, appear $args);
}

@include keyframes(fadein) {
    0%  { @include opacity(0); }
    100%  { @include opacity(1); }
}

@mixin fadein($args: .5s) {
    @include prefix(animation, fadein $args);
}

@mixin transition($duration: .3s, $timing: ease) {
    @include prefix(transition, $duration $timing);
}
